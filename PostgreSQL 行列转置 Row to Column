<pre>
记录一下, from https://stackoverflow.com/questions/23060256/postgres-transpose-rows-to-columns/57262772#57262772

假定有如下的数据表:

CREATE TABLE sales
(
  year integer, -- 年
  month integer, -- 月
  counts integer -- 销量
);
--样本数据
insert into sales values(1991,1,11),(1991,2,12),(1991,3,13),(1991,4,14),(1992,1,21),(1992,2,22),(1992,3,23),(1992,4,24);
即数据列表如下(select * from sales):
year	month	counts
----  ----  ------
1991	1	11
1991	2	12
1991	3	13
1991	4	14
1992	1	21
1992	2	22
1992	3	23
1992	4	24

期望实现行列转置,结果如下:
year	1月	2月	3月	4月
------------------------
1992	21	22	23	24
1991	11	12	13	14


方法 1. 巧妙地使用 json 函数实现行列转置:
select year, 
(obj->>'1')::int "1月",
(obj->>'2')::int "2月",
(obj->>'3')::int "3月",
(obj->>'4')::int "4月"
from(
	select year, json_object_agg(month, counts) obj
	from sales
	group by year
) temp

方法 2. 使用 crosstab 函数
select * from
	crosstab('select year, month, counts from sales where month<9 order by 1',
	'select distinct month from sales order by 1')
  as t ("年" integer,
	"1月" integer,
	"2月" integer,
	"3月" integer,
  "4月" integer
);


